@page "/"
@rendermode InteractiveServer
@inject NavigationManager Navegador
@inject shipPostListUseCase shipPostListUseCase
@inject vehiclePostListUseCase vehiclePostListUseCase
@inject listShipImagesUseCase listShipImagesUseCase
@inject listVehicleImagesUseCase listVehicleImagesUseCase
@inject userListUseCase userListUseCase
@inject shipListUseCase shipListUseCase
@inject vehicleListUseCase vehicleListUseCase


<table width="100%" class="table">
    <thead>
        <tr>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var p in posts){
            <tr>
            @if(p.getType()){
                <td><img src="@string.Format("data:image/jpeg;base64,{0}", Convert.ToBase64String(listShipImagesUseCase.Execute().Where(s => s.ShipId == p.getId()).ElementAt(0).Image))" width="100" height="100"/></td>
            }
            @if(!p.getType()){
                <td><img src="@string.Format("data:image/jpeg;base64,{0}", Convert.ToBase64String(listVehicleImagesUseCase.Execute().Where(s => s.VehicleId == p.getId()).ElementAt(0).Image))" width="100" height="100"/></td>
            }
            <td>@p.getTitle()</td>
            </tr>
        }
    </tbody>
</table>

@code {
    
    List<Post> posts = new List<Post>();
    bool ver = false;

    protected override void OnInitialized() {
       posts.AddRange(shipPostListUseCase.Execute());
       posts.AddRange(vehiclePostListUseCase.Execute());
       posts.RemoveAll(p => null != userListUseCase.Execute().Where(u => u.banned && (shipListUseCase.Execute().Where(s => (s.Id == p.getId()) && p.getType()).Count() != 0) && (u.Id == shipListUseCase.Execute().Where(s => (s.Id == p.getId()) && p.getType()).SingleOrDefault().UserId)).SingleOrDefault());
       posts.RemoveAll(p => null != userListUseCase.Execute().Where(u => u.banned && (vehicleListUseCase.Execute().Where(s => (s.Id == p.getId()) && !p.getType()).Count() != 0) && (u.Id == vehicleListUseCase.Execute().Where(s => (s.Id == p.getId()) && !p.getType()).SingleOrDefault().UserId)).SingleOrDefault());
       posts = posts.OrderBy(_ => Guid.NewGuid()).ToList();
   }
}
