@page "/login"
@inject NavigationManager navegador
@inject userListUseCase userListUseCase
@inject employeeListUseCase employeeListUseCase
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage sessionStorage

<DialogoError @ref=dialogo/>

<h1>Ingresá tus datos para loggearte!</h1>

<form>
    <div class="form-group">
        <input placeholder="Correo" @bind="mail" class="form-control">
    </div>
    <div class="form-group">
        <input type="password" placeholder="Contraseña" @bind="password" class="form-control">
    </div>
   <button class="btn btn-primary" @onclick="Aceptar" @onclick:preventDefault>Iniciar sesión</button>
    <!-- <a href="https://www.youtube.com/watch?v=dQw4w9WgXcQ">Olvidaste tu contraseña?</a> -->
</form>


@code {
    string mail = "";
    string password = "";
    DialogoError dialogo = null!;

    async Task Save(bool isEmployee, int? userId) {
        await sessionStorage.SetAsync("userId", userId);
        await sessionStorage.SetAsync("isEmployee", isEmployee);
        await sessionStorage.SetAsync("cartel?", "Te has loggeado con exito");
    }
    
    async Task Aceptar(){

        if ((string.IsNullOrEmpty(mail) || string.IsNullOrEmpty(password))) {
            dialogo.Mostrar("Complete todos los campos para iniciar sesión");
            return;
        }

        Employee? employee = employeeListUseCase.Execute().Find(employee => employee.mail == mail && employee.password == password);

        if (employee != null) {
            await esEmpleado(employee);
        } else {
            User? user = userListUseCase.Execute().Find(user => user.mail == mail && user.password == password);
            await esCliente(user);
        }
    }

    async Task esEmpleado(Employee employee) {
        await Save(true, employee.Id);
        navegador.NavigateTo("/homeemployee", true);
    }

    async Task esCliente(User? user) {

        if (user == null) {
            dialogo.Mostrar("El mail y la contraseña ingresada no corresponden a un usuario registrado, intente nuevamente");    
            return;
        }

        if (user.banned) {
            dialogo.Mostrar("Tu cuenta se encuentra baneada");
            return;
        }

        await Save(false, user.Id);
        navegador.NavigateTo("/", true);
    }
}
