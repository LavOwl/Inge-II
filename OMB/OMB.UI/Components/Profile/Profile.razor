@page "/profile/{userUsername?}"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@rendermode InteractiveServer

@inject ProtectedSessionStorage sessionStorage
@inject userListUseCase userListUseCase

<div class="container">
  <div class="profile_card">
    <div class="profile_details">
      <div class="intro">
        <h2>@user?.name @user?.surname</h2>
      </div>
   
      <div class="contact_info">
        <div class="row">
          <div class="icon">
            <i class="bx bx-user icon" ></i>
          </div>
          <div class="content">
            <span>Phone</span>
            <h5>@user?.number</h5>
          </div>
        </div>
        <div class="row">
          <div class="icon">
            <i class="bx bx-user icon"></i>
          </div>
          <div class="content">
            <span>Email</span>
            <h5>@user?.mail</h5>
          </div>
        </div>
        <div class="row">
          <div class="icon">
            <i class="bx bx-user icon"></i>
          </div>
          <div class="content">
            <span>UserName</span>
            <h5>@user?.userName</h5>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button class="btn btn-primary" data-bs-toggle="modal"data-bs-target="#listarVehiculosModal">Listar vehiculos</button>
</div>

<ListarVehiculos />

@code {
  User? user = new User();
  [Parameter] public string? userUsername { get; set; }

  protected override async Task OnInitializedAsync() {

      var foundUser = await Task.Run(() => userListUseCase.Execute().Find(user => user.userName == userUsername));

      user = foundUser ?? new User();

  }

}